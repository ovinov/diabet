{"version":3,"sources":["component/ice/ice1.png","container/bot/ref.png","component/pointscroll/pointscroll.jsx","component/shadow/shadow.jsx","component/animatepoint/animatepoint.jsx","component/topic/topic.jsx","container/top/top.jsx","component/ice/ice.jsx","container/mid/mid.jsx","container/bot/bot.jsx","container/swiper/swiper.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PointScroll","_ref","counter","react_default","a","createElement","className","Shadow","opacity","style","animatepoint","animateclass","wrapperclass","Topic","topic","topicClass","Top","component_animatepoint_animatepoint","component_topic_topic","Ice","iceStyle","src","require","alt","Mid","parallax","top","ice_ice","Bot","width","height","Swiper","state","touchPoint","midScreen","parallaxCount","handleTouch","e","point","targetTouches","screenY","screen","Math","floor","view","innerHeight","_this","setState","Handleend","prevState","window","scrollBy","behavior","setTimeout","localStorage","clear","setItem","getItem","this","JSON","parse","onTouchMove","onTouchEnd","pointscroll_pointscroll","shadow_shadow","container_top_top","mid_mid","bot_bot","Component","App","swiper_swiper","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca971467.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ice1.be75dbe6.png\";","module.exports = __webpack_public_path__ + \"static/media/ref.8212b9de.png\";","import React from \"react\"\nimport\"./pointscroll.css\"\n\nconst PointScroll = ({counter}) =>(\n  <div className=\"scroller\">\n  <div className={ counter===768 ? \"pointOn\" : \"pointOff\"}>\n  </div>\n  <div className={ counter===0 ? \"pointOn\" : \"pointOff\"}>\n  </div>\n  <div className={ counter===-768 ? \"pointOn\" : \"pointOff\"}>\n  </div>\n  </div>\n)\n\nexport default PointScroll\n","import React from \"react\"\nimport \"./shadow.css\"\n\nconst Shadow =({opacity}) =>(\n<div className=\"shadow\" style={{opacity: opacity}}>\n  <h2>Листайте вниз</h2>\n  <div className=\"arrow\"></div>\n  </div>\n)\n\nexport default Shadow\n","import React from 'react';\nimport './animatepoint.css'\n\nconst animatepoint = ({animateclass, wrapperclass}) =>\n(\n  <div  className={wrapperclass}>\n<div className={animateclass}></div>\n</div>\n)\nexport default animatepoint;\n","import React from 'react';\nimport './topic.css'\n\n\nconst Topic =({topic,topicClass})=>(\n<h2 className={topicClass}>{topic}</h2>\n)\n\nexport default Topic;\n","import React from 'react';\nimport Animatepoint from '../../component/animatepoint/animatepoint'\nimport Topic from '../../component/topic/topic'\nimport \"./top.css\"\nconst Top =()=>(\n<div className=\"top\">\n<h1 className=\"top__Topic\">Всегда ли цели терапии СД2 <br/>на поверхности?</h1>\n<div className=\"top__firstPoint\">\n<Animatepoint animateclass=\"top__firstPoint__animate\" wrapperclass=\"top__firstPoint__wrapper\"/>\n<Topic topic=\"Цель по HbA1c\" topicClass=\"top__firstPoint__topic\"/>\n</div>\n<div className=\"top__secondPoint\">\n  <Topic topic=\"Гипогликемия\" topicClass=\"top__secondPoint__topic\"/>\n<Animatepoint animateclass=\"top__secondPoint__animate\" wrapperclass=\"top__secondPoint__wrapper\"/>\n</div>\n<div className=\"top__thirdPoint\">\n<Topic topic=\"СС риски\" topicClass=\"top__thirdPoint__topic\"/>\n<Animatepoint animateclass=\"top__thirdPoint__animate\" wrapperclass=\"top__thirdPoint__wrapper\"/>\n</div>\n<div className=\"top__fourthPoint\">\n<Topic topic=\"Осложнения СД\" topicClass=\"top__fourthPoint__topic\" />\n<Animatepoint animateclass=\".top__thirdPoint__animate\" wrapperclass=\"top__thirdPoint__wrapper\"/>\n</div>\n</div>\n)\n\nexport default Top\n","import React from 'react'\nimport \"./ice.css\"\n\nconst Ice = ({iceStyle}) =>(\n<div >\n<img className={iceStyle} src={require('./ice1.png')} alt=\"ice\"/>\n</div>\n)\n\nexport default Ice;\n","import React from 'react';\nimport Ice from '../../component/ice/ice'\nimport \"./mid.css\"\nconst Mid =({ parallax })=>(\n<div className=\"mid\">\n<h1 className=\"mid__topic\">Основа терапии - <br/>патогенез СД2</h1>\n<div className=\"mid__firstIce\" style={{top:50 + parallax *0.1  +\"px\"}}>\n<Ice iceStyle =\"icer\"/>\n</div>\n<div className=\"mid__secondIce\" style={{top:180 + parallax *0.1  +\"px\"}}>\n<Ice iceStyle =\"icer2\"/>\n</div>\n<div className=\"mid__thirdIce\" style={{top:450 + parallax *0.1  +\"px\"}}>\n<Ice iceStyle =\"icer3\"/>\n</div>\n<div className=\"mid__fourthIce\" style={{top:600+ parallax *0.1  +\"px\"}}>\n<Ice iceStyle =\"icer4\"/>\n</div>\n</div>\n)\nexport default Mid\n","import React from 'react';\nimport Ice from '../../component/ice/ice'\nimport \"./bot.css\"\n\nconst Bot =()=>(\n<div className=\"bot\">\n<div className=\"bot__firstIce\">\n<Ice iceStyle =\"icer5\"/>\n</div>\n<h1 className=\"bot__topic\">Звенья патогенеза СД2</h1>\n<img src={require(\"./ref.png\")} style={{width : \"1024px\",height : \"768px\"}}/>\n<div className=\"bot__secondIce\">\n<Ice iceStyle =\"icer6\"/>\n</div>\n<div className=\"bot__thirdIce\">\n<Ice iceStyle =\"icer7\"/>\n</div>\n</div>\n)\n\nexport default Bot\n","import React,{ Component } from 'react';\nimport './swiper.css';\nimport PointScroll from '../../component/pointscroll/pointscroll'\nimport Shadow from \"../../component/shadow/shadow\"\nimport Top from \"../top/top\"\nimport Mid from \"../mid/mid\"\nimport Bot from \"../bot/bot\"\nclass Swiper extends Component {\nstate = {\n  touchPoint: 0,\n  midScreen: 0,\n  counter: 1,\n  parallaxCount:768\n}\n\ncomponentWillMount(){\n    localStorage.getItem('parallax') && this.setState({\n      parallaxCount: JSON.parse(localStorage.getItem(\"parallax\"))})\n}\nhandleTouch = (e) =>{\n   let point = e.targetTouches[0].screenY;\n   let screen = Math.floor(e.view.innerHeight/2);\n  this.setState(({ touchPoint, midScreen, parallaxCount }) =>({\n    touchPoint: point,\n    midScreen: screen\n  }))\n}\nHandleend = () =>{\n  if(this.state.touchPoint < this.state.midScreen && this.state.parallaxCount>-768){\n    let parallax = (this.state.parallaxCount - 768)\n    this.setState(prevState => ({\n      counter:++prevState.counter,\n      parallaxCount: parallax\n    }))\n      window.scrollBy({top: 768, behavior: 'smooth' })\n  }\n  if (this.state.touchPoint > this.state.midScreen && this.state.parallaxCount<768) {\n    let parallax= (this.state.parallaxCount + 768)\n  this.setState(prevState => ({\n    counter:--prevState.counter,\n    parallaxCount: parallax\n  }))\n  window.scrollBy({top: -768, behavior: 'smooth' })\n}\nsetTimeout(()=>{\n  localStorage.clear()\n  localStorage.setItem('parallax',this.state.parallaxCount)\n},100)\n}\n render(){\n  let counter =  this.state.parallaxCount + 1;\n   return(\n  <div className=\"switch\"  onTouchMove={this.handleTouch} onTouchEnd={this.Handleend}>\n  <PointScroll counter={this.state.parallaxCount } />\n  <Shadow opacity={counter }/>\n  <Top />\n  <Mid parallax ={this.state.parallaxCount}/>\n  <Bot />\n </div>\n)\n}}\n\nexport default Swiper;\n","import React from 'react';\nimport './App.css';\nimport Swiper from './container/swiper/swiper';\n\nconst App = () => (\n<Swiper />\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}